{"name":"Fitboard","tagline":"The source of fitboard.me","body":"# About Fitboard\r\n\r\n[Fitboard.me](http://fitboard.me) is a webapp built to connect the [Fitbit API](http://dev.fitbit.com/) to [Panic's Status Board](https://panic.com/statusboard/) iPad application.  Fitboard is free for anyone to use at [Fitboard.me](http://fitboard.me) or you can fork the repo and build your own.\r\n\r\nThe source for Fitbit is open - please contribute.\r\n\r\nFitboard allows you to visualize\r\n\r\n- Steps\r\n- Calories\r\n- Distance\r\n- Floors\r\n- Active Score\r\n- Minutes Asleep\r\n- Sleep Efficiency\r\n- Times Awakened\r\n\r\nAnd a multi point graph showing\r\n\r\n- Minutes Sedentary\r\n- Minutes Lightly Active\r\n- Minutes Fairly Active\r\n- Minutes Very Active\r\n\r\nOver\r\n\r\n- 1 Day\r\n- 7 Days\r\n- 1 Month\r\n- 3 Months\r\n- 6 Months\r\n- 1 Year\r\n- Max\r\n\r\nIn Status Board on your iPad\r\n\r\nFitboard depends heavily on the following **awesome** Python packages:\r\n\r\n- [Python FitBit API Client](https://github.com/orcasgit/python-fitbit)\r\n- [Flask](http://flask.pocoo.org/)\r\n\r\nYou can see the full list of packages in [requirements.txt](https://github.com/ctaloi/Fitboard/blob/master/requirements.txt)\r\n\r\n\r\n**********\r\n\r\n# Building Fitboard\r\n\r\nYou should be able to deploy Fitboard locally, to a VPS or on Heroku with minimal configuration changes.\r\n\r\n### Local Build\r\n\r\nUse [Virtualenv Wrapper](http://virtualenvwrapper.readthedocs.org/en/latest/command_ref.html) to manage virtual environments\r\n\r\nCreate a new virtual environment\r\n\r\n    mkvirtualenv fitboard\r\n\r\n### Clone fitboard\r\n\r\n    cd ~/Projects\r\n    git clone https://github.com/ctaloi/Fitboard.git\r\n\r\n### Install Fitboard Requirements\r\n\r\n    cd ~/Projects/Fitboard\r\n    workon fitboard\r\n    pip -r install requirements.txt\r\n\r\n### Use SQLite\r\n\r\nSet your config.py file for local SQLite\r\n\r\n    # if sqlite, uncomment the next two lines\r\n    basedir = os.path.abspath(os.path.dirname(__file__))\r\n    SQLALCHEMY_DATABASE_URI = 'sqlite:///' + os.path.join(basedir, 'app.db')\r\n\r\n    # else\r\n    # SQLALCHEMY_DATABASE_URI = os.environ['DATABASE_URL']\r\n\r\n### Get Connected\r\n\r\nIn order to talk to the Fitbit API you need to [sign up](https://dev.fitbit.com/apps/new) and obtain a key and secret.\r\n\r\nCompleting the registration request is easy.\r\n\r\n- Default access type: Read-Only\r\n- Application Type: Browser\r\n\r\nSave your CONSUMER_KEY and CONSUMER_SECRET\r\n\r\n## Heroku Deployment\r\n\r\nInstall [Heroku Toolbelt](https://toolbelt.heroku.com/)\r\n\r\nFollow the Getting started with Flask and Heroku [guide](https://devcenter.heroku.com/articles/python) for setting up your Heroku Deployment\r\n\r\nAdd Postgres addon\r\n\r\n    heroku addons:add heroku-postgresql:dev\r\n\r\nPromote the database\r\n\r\n    heroku pg:promote HEROKU_POSTGRESQL_TEAL_URL\r\n\r\nThis sets up Postgres and sets the heroku config DATABASE_URL for us.  To create and populate the database table we need to use a heroku python shell\r\n\r\n    heroku run python\r\n    >>> from main import db\r\n    >>> db.create_all()\r\n\r\nYou can use this Postgres instance locally or deployed\r\n\r\n## Standalone Deployment\r\n\r\nFlask can also run under a standalone WSGI container - [more detail and options](http://flask.pocoo.org/docs/deploying/wsgi-standalone/)\r\n\r\nI've tested with the following stack:\r\n\r\n- [Flask](http://flask.pocoo.org/)\r\n- [Gunicorn](http://gunicorn.org/)\r\n- [NGINX](http://nginx.org/)\r\n- [Supervisor](https://pypi.python.org/pypi/supervisor)\r\n\r\n### Summary of standalone configuration\r\n\r\nBasically - Supervisor starts Gunicorn who starts the fitboard app\r\n\r\n#### Supervisor\r\n\r\nconfig: /etc/supervisor/conf.d/fitboard.conf\r\n\r\n    [program:gunicorn]\r\n    command=/home/chris/Envs/fitboard/bin/gunicorn -w 4 -b 127.0.0.1:8000 main:app\r\n    directory=/home/chris/Projects/Fitboard\r\n    user=chris\r\n    autostart=true\r\n    autorestart=true\r\n    redirect_stderr=True\r\n    environment=CONSUMER_KEY=\"XXX\",CONSUMER_SECRET=\"XXX\",DATABASE_URL=\"XXX\",SECRET_KEY=\"XXX\"\r\n\r\n#### NGINX\r\n\r\nconfig: /etc/nginx/sites-available/fitboard (symlink in sites-enabled)\r\n\r\n    server {\r\n        listen 80;\r\n        server_name fitboard.me;\r\n        access_log  /var/log/nginx/fitboard.log;\r\n\r\n        location / {\r\n            proxy_pass http://127.0.0.1:8000;\r\n            proxy_set_header Host $host;\r\n            proxy_set_header X-Real-IP $remote_addr;\r\n            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\r\n        }\r\n      }\r\n\r\n#### Gunicorn\r\n\r\nGunicorn is configured in the supervisor config file\r\n\r\n## Start Fitboard\r\n\r\n### Local\r\n\r\n- Edit config.py and set debug to True\r\n\r\nTo start Fitboard running under Flask debug mode (local - non production) you need to setup your environmental variables using the CONSUMER_KEY and CONSUMER_SECRET provided by Fitbit and other 'secure' variables of your deployment.\r\n\r\nI have a shell script which runs the following\r\n\r\n    export CONSUMER_KEY=\r\n    export CONSUMER_SECRET=\r\n    export DATABASE_URL=\r\n    export SECRET_KEY=\r\n    export MAIL_USERNAME=\r\n    export MAIL_PASSWORD=\r\n    ./python main.py\r\n\r\n### Heroku\r\n\r\nSet your variables using the Heroku CLI\r\n\r\n    heroku config:set SECRET_KEY=\r\n    heroku config:set CONSUMER_KEY=\r\n    heroku config:set CONSUMER_SECRET=\r\n    heroku config:set MAIL_USERNAME=\r\n    heroku config:set MAIL_PASSWORD=\r\n    heroku config:set DATABASE_URL=\r\n\r\n### Standalone\r\n\r\nYour environmental variables are called in the your supervisor config\r\n\r\nconfig: /etc/supervisor/conf.d/fitboard.conf\r\n\r\n    [program:gunicorn]\r\n    command=/home/chris/Envs/fitboard/bin/gunicorn -w 4 -b 127.0.0.1:8000 main:app\r\n    directory=/home/chris/Projects/Fitboard\r\n    user=chris\r\n    autostart=true\r\n    autorestart=true\r\n    redirect_stderr=True\r\n    environment=CONSUMER_KEY=\"XXX\",CONSUMER_SECRET=\"XXX\",DATABASE_URL=\"XXX\",SECRET_KEY=\"XXX\"\r\n\r\n    service nginx restart\r\n    service supervisor restart\r\n\r\nSupervisor will trigger Gunicorn and Fitboard\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","google":"UA-41889805-1","note":"Don't delete this file! It's used internally to help with page regeneration."}